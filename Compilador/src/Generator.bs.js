// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function generate_exp(ast_exp) {
  if (ast_exp.tag) {
    var decimal = String(ast_exp[0]);
    var return_statement = "    movl    " + (decimal + ", %eax");
    console.log(return_statement);
    return /* () */0;
  } else {
    throw [
          Caml_builtin_exceptions.match_failure,
          /* tuple */[
            "Generator.re",
            11,
            2
          ]
        ];
  }
}

function visit_statement() {
  console.log("    ret");
  return /* () */0;
}

function generate_statement() {
  generate_exp(/* Const */Block.__(1, [2]));
  return visit_statement(/* () */0);
}

function gen_function_code() {
  console.log("_main:");
  generate_exp(/* Const */Block.__(1, [2]));
  return visit_statement(/* () */0);
}

function generate_code() {
  console.log("    .globl _main");
  return gen_function_code(/* () */0);
}

exports.generate_exp = generate_exp;
exports.visit_statement = visit_statement;
exports.generate_statement = generate_statement;
exports.gen_function_code = gen_function_code;
exports.generate_code = generate_code;
/* No side effect */
